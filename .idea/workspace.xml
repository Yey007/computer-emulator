<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d6596c9d-65af-4718-9856-113efb9213ac" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/assembler/src/lexer.rs" beforeDir="false" afterPath="$PROJECT_DIR$/assembler/src/lexer.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/assembler/src/location.rs" beforeDir="false" afterPath="$PROJECT_DIR$/assembler/src/location.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/assembler/src/main.rs" beforeDir="false" afterPath="$PROJECT_DIR$/assembler/src/main.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/assembler/src/parser.rs" beforeDir="false" afterPath="$PROJECT_DIR$/assembler/src/parser.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/programs/hello_world.asm" beforeDir="false" afterPath="$PROJECT_DIR$/programs/hello_world.asm" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Rust File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="efajy34h" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2aRcAkb0FOsYY3AVFPveZCps3eU" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Cargo.Doctest of bit_array::zeroes (line 16).executor": "Run",
    "Cargo.Run assembler.executor": "Debug",
    "Cargo.Run emulator.executor": "Run",
    "Cargo.Test bit_array::tests.executor": "Coverage",
    "Cargo.Test bit_array::tests::change_bits_test.executor": "Run",
    "Cargo.Test bit_array::tests::change_bits_true_test.executor": "Run",
    "Cargo.Test bit_array::tests::equality.executor": "Run",
    "Cargo.Test bit_array::tests::from_to_array_test.executor": "Run",
    "Cargo.Test bit_array::tests::get_bit_test.executor": "Run",
    "Cargo.Test bit_array::tests::get_test.executor": "Run",
    "Cargo.Test bit_array::tests::iterator.executor": "Run",
    "Cargo.Test bit_array::tests::iterator_size_hint.executor": "Run",
    "Cargo.Test bit_array::tests::map.executor": "Run",
    "Cargo.Test bit_array::tests::set_bit_test.executor": "Run",
    "Cargo.Test bit_array::tests::set_test.executor": "Run",
    "Cargo.Test un::tests.executor": "Debug",
    "Cargo.Test un::tests::from_primitive.executor": "Run",
    "Cargo.Test un::tests::inequality.executor": "Run",
    "Cargo.Test un::tests::shl.executor": "Run",
    "Cargo.Test un::tests::to_primitive.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "org.rust.cargo.project.model.PROJECT_DISCOVERY": "true",
    "settings.editor.selected.configurable": "language.rust.cargo.check",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RsExternalLinterProjectSettings">
    <option name="runOnTheFly" value="true" />
  </component>
  <component name="RunManager" selected="Cargo.Run assembler">
    <configuration name="Run assembler" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package assembler --bin assembler -- ./programs/hello_world.asm ./programs/out" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Run emulator" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package emulator --bin emulator" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test bit_array::tests" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package common --lib bit_array::tests" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test bit_array::tests::iterator_size_hint" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package common --lib bit_array::tests::iterator_size_hint -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test bit_array::tests::map" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package common --lib bit_array::tests::map -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test mc-computer-emulator" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="test --workspace" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test un::tests" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package common --lib un::tests" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test un::tests::shl" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package common --lib un::tests::shl -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Cargo.Run assembler" />
      <item itemvalue="Cargo.Run emulator" />
      <item itemvalue="Cargo.Test mc-computer-emulator" />
      <item itemvalue="Cargo.Test bit_array::tests" />
      <item itemvalue="Cargo.Test bit_array::tests::iterator_size_hint" />
      <item itemvalue="Cargo.Test bit_array::tests::map" />
      <item itemvalue="Cargo.Test un::tests" />
      <item itemvalue="Cargo.Test un::tests::shl" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Cargo.Test un::tests" />
        <item itemvalue="Cargo.Test un::tests::shl" />
        <item itemvalue="Cargo.Test bit_array::tests" />
        <item itemvalue="Cargo.Test bit_array::tests::map" />
        <item itemvalue="Cargo.Test bit_array::tests::iterator_size_hint" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d6596c9d-65af-4718-9856-113efb9213ac" name="Changes" comment="" />
      <created>1704284691124</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1704284691124</updated>
      <workItem from="1704284693004" duration="4392000" />
      <workItem from="1704314509289" duration="27464000" />
      <workItem from="1704450044021" duration="8461000" />
      <workItem from="1704536789795" duration="64000" />
      <workItem from="1704536860591" duration="12230000" />
      <workItem from="1704577353451" duration="2213000" />
      <workItem from="1704630101654" duration="6451000" />
      <workItem from="1704638443265" duration="5723000" />
      <workItem from="1704722789599" duration="2729000" />
      <workItem from="1704790858088" duration="10927000" />
      <workItem from="1704833076757" duration="4091000" />
      <workItem from="1704878575528" duration="5404000" />
      <workItem from="1704913956819" duration="2669000" />
      <workItem from="1704968454794" duration="2292000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.asm" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/mc_computer_emulator$Test_bit_array__tests.info" NAME="Test bit_array::tests Coverage Results" MODIFIED="1704635132567" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="RsCoverageRunner" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" CONTEXT_FILE_PATH="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/mc_computer_emulator$Test_un__tests.info" NAME="Test un::tests Coverage Results" MODIFIED="1704635763048" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="RsCoverageRunner" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" CONTEXT_FILE_PATH="$PROJECT_DIR$" />
  </component>
</project>